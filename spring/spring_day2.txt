# spring framework 특성
경량 컨테이너 지원(제공)
factory 패턴이 적용된 ioc컨테이너는 DI(의존하는 객체를 직접 생성하지 않고,~~)
aop(관점지향 프로그래밍) 지원 - 핵심 로직과 공통 로직을 분리해서 핵심 로직수행~~
POJO 로 bean을 정의해서 사용할 수 있도록 지원
영속성과 관련된 다양한 api(hibernate, mybatis, jdo ... ) 지원
트랜잭션 처리를 위한 일관된 방법으로 처리, 관리 지원
배치 처리, 메시지 처리, ... 등 다양한 api 지원
framework을 위한 framework

# spring framework 모듈
spring core 모듈 - ioc 기능 지원 ( spring container 클래스 : BeanFactory )
Spring context 모듈 - Core에서 지원하는 기능 이에 추가적인 기능들 지원 (jndi, ejb 를 위한 ~~)
  (ApplicationContext - Spring container 클래스 : beanfactory를 상속받아서 국제화 메시지 처리, 이벤트 처리 등을 지원)
Spring AOP 모듈 - 관점 지향 프로그래밍 지원
Spring DAO 모듈 - JDBC 보다 더 쉽고, 간결하게 개발 가능
Spring ORM 모듈 - hibernate, mybatis, jdo, ... 와의 결합, 통합을 지원
Spring Web 모듈 - MVC 패턴이 적용된 web app 개발 지원, struts, webwork와 같은 프레임워크와 통합 지원
Spring Web MVC 모듈 - 다양한 web UI, 기술 등의 api 지원 

# 의존객체 생성, 주입 방식
1. 생성자를 통해서 주입
2. setXXXX 메서드를 이용해서 주입

# Bean 설정 방식
1. xml 설정 방식
  <bean id="빈이름" name="빈이름" class="">
	<constructor-arg  ref="빈이름" />
	<property type="" index="" value="" ref="빈이름" />
2. 자바 클래스와 Annotation
@Configuration
빈을 리턴하는 메서드 선언부에 @Bean 선언, 빈의 이름은 메서드이름

소스코드에서 빈 요청할때 - 컨테이너객체.getBean("빈이름", 빈타입.class)

Spring 컨테이너의 default 빈 scope는 singleton 입니다.