자바스크립트?
- 인터프리터 언어
- 동적 프로토타입 기반의 객체지향언어
- 동적 타입 언어 
- 함수 기반 언어, 함수가 객체 => 함수형 프로그래밍 언어
  (함수를 변수에 저장, 함수의 인수로 함수를 전달, 함수 내부에 함수를 정의 가능, 함수에서 함수정의를 반환 )
- 클로저 함수

자바스크립트 구성 기술 요소 :
- ECMAScript Core
- 브라우저 제공 API(window, document, XMLHttpRequest,...)
- HTML5 API (Geolocation, WebWorks, Canvas, Video, Audio, DragnDrop,...)

자바스크립트 분류
-클라이언트 측 기술(jQuery,Vue.js, React.js,...)
-서버 측 기술 (node.js)


자바스크립트 코드 작성 문법 :
-인코딩은 utf-8 권장
-대소문자 구분
-.js 파일로 저장
-한 문장 단위로 ;으로 구분합니다.

자바스크립트에서 주석 :
//한줄 주석
/* 여러줄 주석 */

변수?
처리해야 할 값을 메모리에 저장하고 값을 참조하기 위해 사용하는 이름

변수 선언 : var 변수명

변수명 naming 규칙 :
_, $, 영문자로 시작
두번째 문자부터는 숫자도 허용
길이 제한 없음
키워드 X,  내장함수명 X, 내장객체명 X


자바 스크립트의 데이터 유형 :
primitive type :  number, string, null, symbol, undefined, boolean,  
reference type : function, object, interface,...배열 Array는 객체입니다. object유형입니다.

-선언되지 않는 변수를 참조하면 반환되는 값은 ? ReferenceError
-선언만 된 변수, 초기값이 할당되지 않은 변수를 참조하면 반환되는 값은 ? undefined
-객체를 메모리에서 검색을 했는데, 검색되지 않으면  반환되는 값은 ? null

자바 스크립트 출력 방법 :
document.write(), document.writeln() - html 문서의 body 영역 출력
console.log(), console.dir() - 브라우저 또는 node같은 자바스크립트의 실행환경에서 제공하는 콘솔창에 출력
window.alert("메시지");

자바 스크립트 입력 방법 :
window.prompt("메시지", 기본값) - 반환타입은 문자열
window.confirm("메시지") - 반환타입은 boolean

자바 스크립트 연산자 :
산술연산자 - *, /, %, +, -
단항연산자 - ~, !, +, -, ++, --
비교연산자 - >, >=, <, <=, ==, !=, ===, !==
비트연산자 - &, |, ^
논리연산자 - &&, ||
shift 연산자 - <<, >>, >>>
삼항연산자 - 조건?항1:항2
기타 연산자 - typeof, in, instanceof,....

제어문 :
if (조건) { 문장; }

if (조건) { 
   문장;
   ....
}else {
   문장;
   ....
   }

# 다중 if문 
if (조건) { 
   문장;
   ....
}else if (조건) { 
   문장;
   ....
}
else {
   문장;
   ....
   }

# switch문
switch(표현식) {
  case 값 : 문장; break;
  case 값 : 문장; break;
  case 값 : 문장; break;
  default : 문장;
  }

switch(true) {
  case 조건1 : 문장; break;
  case 조건2 : 문장; break;
  case 조건3 : 문장; break;
  default : 문장;
  }

# 반복문 
반복 횟수 알고 있을 때 : for(var count=0;count<조건;count증감식) {
                        반복수행 문장;
			}

조건에 따라 반복 수행 여부를 결정해야 할때 :
while(조건) {
  반복 수행 문장;
  }

최초 1번은 무조건 수행후에 조건에 따라 반복 수행 여부를 결정해야 할때 :
do {
  반복 수행 문장;
  }while(조건);

배열의 요소를 또는 객체의 속성을 순차적으로 꺼내올때 사용할 수 있는 반복문 :
for ( var 변수 in 배열 또는 객체) {
 반복 수행 문장;
 }


console.log(num);   ---> 정상 실행
var num = 10;   ---> 선언 문장은 hoisting됩니다.
                ---> global object인 window의 property로 추가됨

템플릿 리터럴과 placeholder - 포맷형식 문자열에 실행시에 인수를 전달해서 출력하려면
`포맷형식 ${변수} 문자열`

자바스크립트의 형변환 :
문자열로 형변환 - 값+"", String()
정수나 실수로 형변환 - Number(), window.parseInt(), window.parseFloat()
논리형으로 변환 - !!값, Boolean()


자바 스크립트 객체 생성 방법 :
1. 객체 리터럴 - JSON, 하나의 객체만 생성해서 사용하는 경우
2. 생성자 함수 정의  - new 사용, 필요할때마다 생성자함수로부터 객체 생성





























































